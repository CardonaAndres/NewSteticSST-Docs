# ---------------------------------------------------
# Bloque de eventos (requerido aunque esté vacío).
# Aquí se podrían configurar hilos de trabajo y conexiones.
# En este caso no necesitamos personalización.
events {}

http {
    # ---------------------------------------------------
    # Upstreams: definen los "clusters" o destinos a los que
    # Nginx enviará las peticiones.
    # Cada upstream apunta a un microservicio en Docker.

    upstream staff_api {
        server staff:3002;   # Contenedor "staff" escuchando en el puerto 3002
    }

    upstream reports_manager_api {
        server reports-manager:3003;   # Contenedor "reports-manager" en puerto 3003
    }

    # ---------------------------------------------------
    # Servidor principal: recibe las peticiones externas.
    server {
        listen 80;                  # Escucha en el puerto 80 (HTTP)
        server_name localhost;      # Solo responde a peticiones para "localhost"

        # ---------------------------------------------------
        # Configuración de CORS (Cross-Origin Resource Sharing).
        # Permite que el frontend (http://localhost:5001) consuma la API.

        map $http_origin $cors_origin {
            default "";
            "http://localhost:5001" $http_origin;   # Origen permitido (frontend local)
        }

        add_header Access-Control-Allow-Origin "http://localhost:5001" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Respuesta inmediata para preflight requests (OPTIONS)
        if ($request_method = OPTIONS) {
            return 204;
        }

        # ---------------------------------------------------
        # Rutas de cada microservicio

        # Microservicio STAFF
        location /API-SST/v1/ {
            proxy_pass http://staff_api;     # Redirige al upstream "staff_api"
            proxy_set_header Host $host;     # Reenvía cabecera Host original
            proxy_set_header X-Real-IP $remote_addr;   # IP real del cliente
        }

        # Microservicio REPORTS
        location /API-SST/v1/reports {
            proxy_pass http://reports_manager_api;     # Redirige al upstream "reports_manager_api"
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
